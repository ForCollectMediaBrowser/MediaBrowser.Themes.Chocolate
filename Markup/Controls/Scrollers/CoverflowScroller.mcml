<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	    xmlns:cor="assembly://MSCorLib/System"	  
	    xmlns:a="assembly://MediaBrowser/MediaBrowser"
	    xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
	    xmlns:ps="resx://Chocolate/Chocolate.Resources/PosterScroller"
      xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
      xmlns:s="file://Styles_DoNotEdit.mcml"
      xmlns:f="file://Fonts_DoNotEdit.mcml"
      xmlns:ib="resx://Chocolate/Chocolate.Resources/ItemButton"
      xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
      xmlns:me="Me"
      xmlns:vi="resx://Chocolate/Chocolate.Resources/Images"
      xmlns:ch="assembly://Chocolate/Chocolate"
      xmlns:anim="resx://Chocolate/Chocolate.Resources/Animations">

  <UI Name="CoverflowScroller">
    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <ch:ChocHelper Name="ThemeHelper" ChocHelper="$Required"/>
    </Properties>

    <Locals>
      <Timer Name="ScrollAnimTimer" AutoRepeat="false" Enabled="false" Interval="150"/>
      <ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" GesturePanEnabled="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="ScrollingHandler"/>
      <ScrollingData Name="SD" LockedAlignment="0.7" LockedPosition="0.7"/>
      <IntRangedValue Name="SelectRepeaterIndex"/>
      <GridLayout Name="MyLayout" Orientation="Horizontal" AllowWrap="true"
                  Spacing="[Application.Config.GridSpacing]" Repeat="WhenTooBig" RepeatGap="[Application.Config.GridSpacing.Width]" Rows="1" MinorAlignment="Center" />

      <ShortcutHandler Name="JumpForward" Shortcut="SkipForward" HandlerStage="Bubbled" Handle="true" />
      <ShortcutHandler Name="JumpBack" Shortcut="SkipBack" HandlerStage="Bubbled" Handle="true"/>
      <IntRangedValue Name="NavCount" Value="0" />
      <cor:Int32 Name="NormalKeyRepeat" Int32="200"/>
      <!-- This must be less than anim delay -->
      <cor:Int32 Name="FastKeyRepeat" Int32="100"/>
      <cor:Int32 Name="AnimDelay" Int32="250" />
      <!-- This must be greater than NormalKeyRepeat-->
      <cor:Int32 Name="SpeedUpDelay" Int32="15"/>
      <cor:Int32 Name="Startup"/>
    </Locals>

    <Rules>


      <Rule>
        <Conditions>
          <Modified Source="[JumpForward.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[SD.PageDown]"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Modified Source="[JumpBack.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[SD.PageUp]"/>
        </Actions>
      </Rule>

      <Changed Source="[Application]" InitialEvaluate="true">
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
        </Actions>
      </Changed>

      <Changed Source="[NavCount.Value]">
        <Conditions>
          <Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="[SpeedUpDelay]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[FastKeyRepeat]" />
        </Actions>
      </Changed>

      <Changed Source="[NavCount.Value]">
        <Conditions>
          <Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="0"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
        </Actions>
      </Changed>

      <Default Target="[ScrollingHandler.ScrollingData]" Value="[SD]"/>
      <Default Target="[SD.Repeater]" Value="[CoverRepeater]"/>
      <Binding Source="[MyLayout]" Target="[CoverRepeater.Layout]"/>

      <!-- Update cover repeater on items change. -->
      <Changed Source="[Folder.Children]">
        <Actions>
          <Set Target="[CoverRepeater.Source]" Value="[Folder.Children]" />
          <Set  Target="[Folder.SelectedChildIndex]" Value="-1"/>
        </Actions>
      </Changed>

      <!--The below default dummy rule is used to navigate to the proper first item.  using a generic rule or changed does not work the first time-->
      <Default Target="[Startup]" Value="1" ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Application.NavigatingForward]" Value="true"/>
          <Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
        </Conditions>
        <Actions>
          <Invoke Target="[CoverRepeater.NavigateIntoIndex]"  index="[Folder.FirstUnwatchedIndex]"/>
        </Actions>
      </Default>
      
      <Changed Source="[Input.DeepKeyFocus]">
        <Conditions>
          <Equality Source="[Input.DeepKeyFocus]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[ScrollAnimTimer.Enabled]" Value="true"/>
        </Actions>
      </Changed>
      <Changed Source="[ScrollAnimTimer.Tick]">
        <Actions>
          <Set Target="[Scroller.AnimationsEnabled]" Value="true"/>
        </Actions>
      </Changed>
      
      <Changed Source="[Folder.JILShift]">
        <Actions>
          <Invoke Target="[SD.Scroll]"  amount="[Folder.JILShift]"/>
        </Actions>
      </Changed>

      <Rule>
        <Conditions>
          <Modified Source="[JumpForward.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[SD.PageDown]"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Modified Source="[JumpBack.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[SD.PageUp]"/>
        </Actions>
      </Rule>


      <!-- Cover width above 145px -->
      

    </Rules>

    <Content>
      <!-- Coverflow Scroller -->
      <Panel Name="Panel" Navigation="ContainHorizontal" Layout="Anchor" >
        <Children>

          <Scroller Name="Scroller" Orientation="Horizontal" FadeSize="-20" ScrollingData="[SD]" Navigation="RememberFocus"
                    Margins="0,-20,0,0" AnimationsEnabled="false">
            <LayoutInput>
              <AnchorLayoutInput Horizontal="Fill"/>
            </LayoutInput>
            <Children>
              <Repeater Name="CoverRepeater" Source="[Folder.Children]" Layout="[MyLayout]" DiscardOffscreenVisuals="true">
               
                <Content>
                  <me:CoverflowItem
                        Application="[Application]"
                        ParentItem="[Folder]"
                        ItemIndex="[RepeatedItemIndex]"
                        Item="[RepeatedItem!lib:Item]"
                        SelectRepeaterIndex="[SelectRepeaterIndex]"
                        ImageSize="[Folder.ActualThumbSize]"
                        AnimDelay="[AnimDelay]" NavCount="[NavCount]"
                        UnwatchedCountFont="Segoe Media Center Semibold ,14"
                        ShowLabels="[Folder.DisplayPrefs.ShowLabels]"
                        TopLabelFont="font://f:CV_PosterTopLabelFont"
                        ThemeHelper="[ThemeHelper]"/>
                </Content>

                <Animations>
                  <Animation Type="Move">
                    <Keyframes>
                      <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                      <PositionKeyframe Time="0.95" RelativeTo="Final"/>
                    </Keyframes>
                  </Animation>
                </Animations>
              </Repeater>
            </Children>
          </Scroller>
        </Children>
      </Panel>
    </Content>
  </UI>

  <UI Name="CoverflowItem" BaseUI="ib:ItemButton">
    <Properties>
      <lib:SizeRef Name="ImageSize" SizeRef="$Required"/>
      <Image Name="FocusImage" Image="image://i:ZoomPane"/>
      <Image Name="FolderImage" Image="image://i:Folder"/>
      <Image Name="BlankImage" Image="null"/>
      <BooleanChoice Name="ShowLabels" BooleanChoice="$Required" />
      <Image Name="Image" />
      <cor:Int32 Name="AnimDelay" Int32="1000" />
      <lib:FolderModel Name="ParentItem" FolderModel="$Required"/>
      <Index Name="ItemIndex" Index="$Required"/>
      <Rotation Name="RRotate" Rotation="0deg;0,1,0"/>
      <Rotation Name="LRotate" Rotation="0deg;0,1,0"/>
      <IntRangedValue Name="SelectRepeaterIndex" IntRangedValue="$Required"/>
      <IntRangedValue Name="NavCount" IntRangedValue="$Required" />
      <Font Name="UnwatchedCountFont" Font="$Required"/>
      <Font Name="TopLabelFont" Font="$Required"/>
    </Properties>

    <Locals>
      <Timer Name="AnimTimer" Interval="[AnimDelay]" Enabled="false" AutoRepeat="false"/>
      <BooleanChoice Name="InFocus" Value="false" />
    </Locals>

    <Rules>

      <!-- Set the UI to be mouse and keyboard interactive. -->
      <Default Target="[Input.KeyInteractive]" Value="true"/>
      <Default Target="[Input.MakeTopmostOnFocus]" Value="true"/>
      <Default Target="[Label.Visible]" Value="true">
        <Conditions>
          <Equality Source="[Item.HasPreferredImage]" ConditionOp="Equals" Value="false" />
          <!--<Equality Source="[ShowLabels.Value]" ConditionOp="Equals" Value="false" />-->
        </Conditions>
      </Default>

      <Binding Source="[Item.PreferredImageSmall]" Target="[g1.Content]" />
      <Binding Source="[Item.PreferredImageSmall]" Target="[g2.Content]" />
      <Binding Source="[ImageSize.Value]" Target="[Item.PreferredImageSmallSize]" />

      <Binding Source="[ImageSize.Value]" Target="[ConstraintPanel1.MaximumSize]" />
      <Binding Source="[ImageSize.Value]" Target="[ConstraintPanel1.MinimumSize]" />
      <Binding Source="[ImageSize.Value]" Target="[ConstraintPanel2.MaximumSize]" />
      <Binding Source="[ImageSize.Value]" Target="[ConstraintPanel2.MinimumSize]" />
      <Binding Source="[ImageSize.Value]" Target="[BelowLabelPanel.MaximumSize]" />
      <Binding Source="[ParentItem.DisplayPrefs.UseBanner.Value]" Target="[Item.PreferBanner]" />
      

      <!-- Selected state, true if item last had focus -->
      <Condition Source="[InFocus.Value]" SourceValue="true">
        <Actions>
          <Set Target="[Main.Scale]" Value="1.1,1.1,2"/>
          <Set Target="[Main.Rotation]" Value="0deg;0,1,0" />
          <Set Value="[Item.PreferredImage]" Target="[g1.Content]"/>
        </Actions>
      </Condition>

      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="false" />
        </Conditions>
        <Actions>
          <Invoke Target="[AnimTimer.Stop]" />
          <Set Target="[NavCount.Value]" Value="[NavCount.Value]" ExclusiveApply="false">
            <Transformer>
              <MathTransformer Add="1"/>
            </Transformer>
          </Set>
          <Set Target="[InFocus.Value]" Value="false"/>
        </Actions>
      </Changed>

      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Invoke Target="[AnimTimer.Start]" />
          <Set Target="[ParentItem.SelectedChildIndex]" Value="[ItemIndex.SourceValue]"/>
        </Actions>
      </Changed>

      <Changed Source="[AnimTimer.Tick]">
        <Actions>
          <Set Target="[InFocus.Value]" Value="true"/>
          <Set Target="[NavCount.Value]" Value="0" ExclusiveApply="false"/>
        </Actions>
      </Changed>


      <!-- Focus and non-focused states. -->
      <!--
			<Condition Source="[Input.KeyFocus]" ConditionOp="Equals" SourceValue="true">
				<Actions>
					<Set Target="[RootItem.SelectedChildIndex]" Value="[ItemIndex.SourceValue]" />
				</Actions>
			</Condition>
			-->
      <Condition Source="[InFocus.Value]" ConditionOp="Equals" SourceValue="false">
        <Actions>
          <Set Target="[Main.Scale]" Value="1,1,1"/>
        </Actions>
      </Condition>

      <!--Dim Unselected Posters-->
      <Default Target="[ConstraintPanel1.ColorFilter]" Value="color://s:DimPosterFilter">
        <Conditions>
          <Equality Source="[Application.Config.DimUnselectedPosters]" Value="true"/>
        </Conditions>
        <Actions>
          <Invoke Target="[ConstraintPanel1.AttachAnimation]" animation="animation://anim:PosterDim.GainFocus" ExclusiveApply="false"/>
          <Invoke Target="[ConstraintPanel1.AttachAnimation]" animation="animation://anim:PosterDim.LoseFocus"/>
        </Actions>
      </Default>
      <Default Target="[ConstraintPanel1.ColorFilter]" Value="White">
        <Conditions>
          <Equality Source="[Application.Config.DimUnselectedPosters]" Value="false"/>
        </Conditions>
        <Actions>
          <Invoke Target="[ConstraintPanel1.DetachAnimation]" type="GainFocus" ExclusiveApply="false"/>
          <Invoke Target="[ConstraintPanel1.DetachAnimation]" type="LoseFocus"/>
        </Actions>
      </Default>

      <!-- Set proper rotation. -->

      <Condition Source="[SelectRepeaterIndex.Value]" ConditionOp="LessThan" SourceValue="[ItemIndex.Value]" Target="[Main.Rotation]" Value="[LRotate]" />
      <Condition Source="[SelectRepeaterIndex.Value]" ConditionOp="GreaterThan" SourceValue="[ItemIndex.Value]" Target="[Main.Rotation]" Value="[RRotate]" />

      
      <Condition Source="[Item.HDType]" ConditionOp="Equals" SourceValue="720" Target="[HDImage.Content]" Value="image://vi:Icon720" />
      <Condition Source="[Item.HDType]" ConditionOp="Equals" SourceValue="1080" Target="[HDImage.Content]" Value="image://vi:Icon1080" />

      <Binding Source="[Item.HaveWatched]" Target="[TickPanel.Visible]" />
      <Binding Source="[ThemeHelper.Config.ShowCoverflowIndicator]" Target="[TickIndicatorPanel.Visible]"/>
      <!--<Binding Source="[Item.InProgress]" Target="[InProgressPanel.Visible]" />-->
      <Binding Source="[Item.UnwatchedCountString]" Target="[UnwatchedCount.Content]" />
      <Binding Source="[Item.ShowUnwatched]" Target="[UnwatchedIndicator.Visible]" />

      <Changed Source="[Application.Config.ShowWatchedTickOnFolders]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Item.IsPlayable]" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchedTickOnFolders]" />
        </Actions>
      </Changed>

      <Changed Source="[Application.Config.ShowWatchTickInPosterView]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Item.IsPlayable]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchTickInPosterView]" />
        </Actions>
      </Changed>

      <Changed Source="[Item.ShowUnwatched]">
        <Actions>
          <Set Target="[UnwatchedCount.Content]" Value="[Item.UnwatchedCountString]" />
        </Actions>
      </Changed>

      <Binding Target="[g1.MaintainAspectRatio]" Source="[Item.SmallImageIsDistorted]">
        <Transformer>
          <BooleanTransformer Inverse="true"/>
        </Transformer>
      </Binding>

      <Binding Source="[Item.IsFavorite]" Target="[FavIndicator.Visible]" />
      <Binding Source="[Item.IsHD]" Target="[HDIndicator.Visible]"  ConditionLogicalOp="And"  >
        <Conditions>
          <Equality Source="[Application.Config.ShowHDIndicatorOnPosters]" Value="true" />
        </Conditions>
      </Binding>

      <Binding Source="[Item.IsMissing]" Target="[MissingIndicator.Visible]" />
      <Binding Source="[Item.IsFuture]" Target="[FutureIndicator.Visible]" />
      <Binding Source="[ShowLabels.Value]" Target="[BelowLabelPanel.Visible]" />
      <Binding Source="[Item.Name]" Target="[BelowLabelPanel.Content]" />
      <Binding Target="[Mirror.NearOffset]" Source="[ImageSize.Value.Height]">
        <Transformer>
          <MathTransformer DivideInt="2"/>
        </Transformer>
      </Binding>
      <Binding Target="[Mirror.FadeSize]" Source="[ImageSize.Value.Height]">
        <Transformer>
          <MathTransformer DivideInt="4"/>
        </Transformer>
      </Binding>
      <Binding Target="[Main.Margins.Bottom]" Source="[ImageSize.Value.Height]">
        <Transformer>
          <MathTransformer DivideInt="-2"/>
        </Transformer>
      </Binding>
      <Binding Source="[Item.HaveWatched]" Target="[UnwatchedGlow.Visible]">
        <Transformer>
          <BooleanTransformer Inverse="true"/>
        </Transformer>
        <!--<Conditions>
          <Equality Source="[Item.InProgress]" Value="false"/>
        </Conditions>-->
      </Binding>
      <Default Target="[UnwatchedGlow.Visible]" Value="false"/>
      <Condition Source="[Item.ParentalAllowed]" ConditionOp="Equals" SourceValue="false" Target="[PCLock.Visible]" Value="true" />

      <Binding Source="[ThemeHelper.Config.ShowCoverflowPosterOverlay]" Target="[g2.Visible]"/>
      
    </Rules>

    <Content>

      <Graphic Name="Main" Content="[BlankImage]" CenterPointPercent="0.5,0.5,0.5"  Rotation="0deg;0,1,0" Margins="0,0,0,-100">
        <Layout>
          <AnchorLayout SizeToVerticalChildren="true"/>
          <!--<FlowLayout Orientation="Vertical" ItemAlignment="Center" Spacing="0,-5"/>-->
        </Layout>
        <Children>
          <!-- Focus Outline-->
          <Graphic Name="FocusBg" Content="[BlankImage]" Padding="5,5,5,5" SizingPolicy="SizeToChildren" Layout="VerticalFlow">
            <Children>

              <Text Name="BelowLabelPanel" Margins="0,5,0,-3" Alpha="1" Color="color://s:FontColorLight"  Font="[TopLabelFont]" Content="[Item.Name]" WordWrap="false" HorizontalAlignment="Near"></Text>
              <Panel Name="ConstraintPanel1" CenterPointPercent="0.5,0.5,0.5" Padding="0,0,0,0" MaximumSize="[ImageSize.Value]" MinimumSize="[ImageSize.Value]">
                <Layout>
                  <AnchorLayout SizeToHorizontalChildren="false" SizeToVerticalChildren="false"/>
                </Layout>
                <Children>
                  <Panel  Margins="2,2,0,0" Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Alpha=".90" Name="UnwatchedGlowPanel" MaximumSize="35,35" Visible="[Application.Config.ShowUnwatchedIndicator]" >
                    <LayoutInput>
                      <AnchorLayoutInput Left="Parent,0,-15" Top="Parent,0,-15"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="UnwatchedGlow" Content="image://i:Starburst" >
                        <Animations>
                          <Animation Type="Idle" Loop="-1" CenterPointPercent=".5,.5,.5">
                            <Keyframes>
                              <AlphaKeyframe Time="0" Value="0.25"/>
                              <AlphaKeyframe Time="1.3" Value="1"/>
                              <AlphaKeyframe Time="1.7" Value="1"/>
                              <AlphaKeyframe Time="3" Value="0.25"/>
                              <RotateKeyframe Time="0" Value="0deg;0,0,0"/>
                              <RotateKeyframe Time="20" Value="360deg;0,0,1"/>
                            </Keyframes>
                          </Animation>
                        </Animations>

                      </Graphic>
                    </Children>
                  </Panel>
                  <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Alpha="0.9" Name="TickIndicatorPanel" Visible="[Item.HaveWatched]" MaximumSize="42,42" Margins="5,5,0,0">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Far" Vertical="Near" />
                    </LayoutInput>
                    <Children>
                      <Panel Name="TickPanel" Layout="Center" Visible="false">
                        <Children>
                          <Graphic Content="image://i:Watched"  MaximumSize="40,40"  />
                        </Children>
                      </Panel>
                    </Children>
                  </Panel>
                  <Panel  Margins="2,2,2,2" Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Name="UnwatchedIndicator" MaximumSize="47,47" >
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Far" Vertical="Near"/>
                    </LayoutInput>
                    <Children>
                      <Text Name="UnwatchedCount" Content="" Color="color://s:FontColorLight" Font="[UnwatchedCountFont]" Margins="0,0,0,0"></Text>
                      <Graphic Visible="global://s:ShowWatchedMarkerBackgrounds" Content="image://i:GreenCircle"  MinimumSize="40,40" MaximumSize="40,40" MaintainAspectRatio="true" Layout="Center" ></Graphic>
                    </Children>
                  </Panel>
                  <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="HDIndicator">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Far" Vertical="Far"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="HDImage" Content="image://i:HDLogo" Margins="0,0,5,5" MaximumSize="35,0" MaintainAspectRatio="true">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                  <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="FavIndicator">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Near" Vertical="Far"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="FavImage" Content="image://i:Heart" Margins="0,0,5,5" MaximumSize="48,35" MaintainAspectRatio="true">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                  <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="PCLock">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Near" Vertical="Far"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="PCLockImage" Content="image://i:Lock" Margins="0,0,5,5" MaximumSize="30,30" MaintainAspectRatio="true">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                  <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="[Item.IsExternalDisc]" Name="ExternalIndicator">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Far" Vertical="Near"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="ExternalImage" Content="image://i:ExternalBanner" Margins="0,0,0,0" MaximumSize="75,75" MaintainAspectRatio="true">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                  <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="[Item.IsOffline]" Name="OfflineIndicator">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Far" Vertical="Near"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="OfflineImage" Content="image://i:OfflineBanner" Margins="0,0,0,0" MaximumSize="75,75" MaintainAspectRatio="true">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                  <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="MissingIndicator">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Far" Vertical="Near"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="MissingImage" Content="image://i:MissingBanner" Margins="0,0,0,0" MaximumSize="75,75" MaintainAspectRatio="true">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                  <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="FutureIndicator">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Far" Vertical="Near"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="FutureImage" Content="image://i:FutureBanner" Margins="0,0,0,0" MaximumSize="75,75" MaintainAspectRatio="true">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                  <Graphic Name="g1" SizingPolicy="SizeToConstraint" MaintainAspectRatio="true">
                    <Children>
                      <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Center">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Fill" Vertical="Fill"/>
                        </LayoutInput>
                        <Children>
                          <Text Alpha="1" Name="Label" Visible="false" Color="color://s:FontColorLight" Content="[Item.Name]"  WordWrap="true" Margins="5,5,5,5"  HorizontalAlignment="Center">
                          </Text>
                        </Children>
                      </Panel>
                    </Children>
                  </Graphic>
                </Children>
              </Panel>
            </Children>
          </Graphic>

          <!-- Mirror Effect-->
          <Clip Name="Mirror" FadeAmount="1" FadeSize="50" NearOffset="0" Padding="5,5,5,5" Orientation="Vertical" ShowFar="false" Margins="0,-10,0,0">
            <Layout>
              <FlowLayout Orientation="Vertical" ItemAlignment="Center" />
            </Layout>
            <LayoutInput>
              <AnchorLayoutInput Top="FocusBg, 1, -5" />
            </LayoutInput>
            <Children>
              <Panel Name="ConstraintPanel2" ColorFilter="color://s:MirrorFilter" Alpha="global://s:MirrorAlpha" CenterPointPercent="0.5,0.5,0.5" Rotation="180deg;1,0,0">
                <Layout>
                  <AnchorLayout SizeToHorizontalChildren="false" SizeToVerticalChildren="false"/>
                </Layout>
                <Children>
                  <Graphic Name="g2" SizingPolicy="SizeToConstraint" MaintainAspectRatio="true" >
                  </Graphic>
                </Children>
              </Panel>
            </Children>
          </Clip>
        </Children>

        <Animations>
          <Animation Type="Scale" CenterPointPercent="0.5,0.5,0.5">
            <Keyframes>
              <ScaleKeyframe Time="0" RelativeTo="Current" Interpolation="Log"/>
              <ScaleKeyframe Time=".55" RelativeTo="Final"/>
            </Keyframes>
          </Animation>
          <Animation Type="Rotate">
            <Keyframes>
              <RotateKeyframe RelativeTo="Current" Time="0" Value="0deg;0,1,0" Interpolation="SCurve"/>
              <RotateKeyframe RelativeTo="Final" Time="0.75" Value="0deg;0,1,0" />
            </Keyframes>
          </Animation>
        </Animations>
      </Graphic>


    </Content>
  </UI>


</Mcml>
