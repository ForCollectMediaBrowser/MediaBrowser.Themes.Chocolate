<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	    xmlns:cor="assembly://MSCorLib/System"
      xmlns:lb="resx://Chocolate/Chocolate.Resources/ListButton"
      xmlns:a="assembly://MediaBrowser/MediaBrowser"
      xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
	    xmlns:s="file://Styles_DoNotEdit.mcml"
      xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
      xmlns:uf="file://Plugins\Chocolate\Chocolate_Fonts.mcml"
      xmlns:uc="resx://Chocolate/Chocolate.Resources/Colors"
	    xmlns:tb="resx://Chocolate/Chocolate.Resources/TextButton"
      xmlns:it="resx://Chocolate/Chocolate.Resources/Images"
      xmlns:ch="assembly://Chocolate/Chocolate"
  xmlns:me="Me">

  <UI Name="SeasonsScroller">

    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <ch:ChocHelper Name="ThemeHelper" ChocHelper="$Required"/>
    </Properties>

    <Locals>
      <!-- Use the MouseWheel handler to handle the mouse wheel.  -->
      <ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="ScrollingHandler"/>
      <ScrollingData Name="ScrollingData" BeginPadding="5" EndPadding="150" />
      <cor:Int32 Name="Startup"/>
    </Locals>

    <Rules>

      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]"/>
      <Default Target="[ScrollingData.Repeater]" Value="[MyRepeater]"/>


      <Binding Source="[Folder.Children]" Target="[MyRepeater.Source]"/>

      <!--The below default dummy rule is used to navigate to the proper first item.  using a generic rule or changed does not work the first time-->
      <Default Target="[Startup]" Value="1" ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Application.NavigatingForward]" Value="true"/>
          <Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
        </Conditions>
        <Actions>
          <Invoke Target="[MyRepeater.NavigateIntoIndex]"  index="[Folder.FirstUnwatchedIndex]"/>
        </Actions>
      </Default>

      <Changed Source="[Folder.JILShift]">
        <Actions>
          <Invoke Target="[ScrollingData.Scroll]"  amount="[Folder.JILShift]"/>
        </Actions>
      </Changed>

      <Changed Source="[Application]" InitialEvaluate="true">
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="50" />
        </Actions>
      </Changed>

    </Rules>

    <Content>

      <Panel Layout="Form">
        <Children>
          <Scroller Orientation="Vertical" Name="Scroller" ScrollingData="[ScrollingData]" FadeSize="10"  >
            <LayoutInput>
              <FormLayoutInput Left="Parent, 0" Top="Parent,0" Bottom="Parent,1,-40"/>
            </LayoutInput>
            <Children>
              <Repeater  Source="[Folder.Children]" Name="MyRepeater" DiscardOffscreenVisuals="false" >
                <Layout>
                  <FlowLayout Orientation="Vertical" Repeat="Never"/>
                </Layout>
                <Animations>
                  <Animation Type="Move">
                    <Keyframes>
                      <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                      <PositionKeyframe Time="0.55" RelativeTo="Final"  />
                    </Keyframes>
                  </Animation>
                </Animations>
                <Content >
                  <me:SeasonList Application="[Application]" Index="[RepeatedItemIndex]" Parent="[Folder]" Folder="[RepeatedItem!lib:FolderModel]"  ThemeHelper="[ThemeHelper]"/>
                </Content>
              </Repeater>
            </Children>
          </Scroller>

        </Children>

      </Panel>


    </Content>
  </UI>

  <UI Name="SeasonList">
    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <lib:FolderModel Name="Parent" FolderModel="$Required"/>
      <ch:ChocHelper Name="ThemeHelper" ChocHelper="$Required"/>
      <Index Name="Index" Index="$Required"/>
    </Properties>

    <Locals>
      <Command Name="ExpandContract"/>
      <Command Name="LeftFromList"/>
      <cor:Boolean Name="Expanded" Boolean="false" />
      <cor:Boolean Name="FirstEntered" Boolean="true" />
      <Timer Name="NavTimer" AutoRepeat="false" Enabled="false" Interval="250" />
    </Locals>
    
    <Rules>
      <Rule>
        <Conditions>
          <Equality Source="[FirstEntered]" Value="true" />
          <Equality Source="[Application.Config.DefaultToFirstUnwatched]" Value="true" />
          <Equality Source="[Index.Value]" Value="[Parent.FirstUnwatchedIndex]" />
        </Conditions>
        <Actions>
          <Set Target="[Expanded]" Value="true" />
          <Set Target="[FirstEntered]" Value="false" />
          <Invoke Target="[NavTimer.Start]" />
        </Actions>
      </Rule>
      <Changed Source="[NavTimer.Tick]" >
        <Actions>
          <Invoke Target="[MyRepeater.NavigateIntoIndex]" index="[Folder.FirstUnwatchedIndex]" />
        </Actions>
      </Changed>
      <Binding Source="[Folder.Children]" Target="[MyRepeater.Source]"/>
      <Binding Source="[Folder.BannerImage]" Target="[SeasonPoster.Content]" >
        <Conditions>
          <Equality Source="[Folder.HasBannerImage]" Value="true" />
        </Conditions>
      </Binding>
      <Binding Source="[Parent.BannerImage]" Target="[SeasonPoster.Content]" >
        <Conditions>
          <Equality Source="[Folder.HasBannerImage]" Value="false" />
          <Equality Source="[Parent.HasBannerImage]" Value="true" />
        </Conditions>
      </Binding>
      <Binding Source="[Folder.Children.Count]" Target="[EpisodeCount.Content]" >
        <Transformer>
          <FormatTransformer Format="{0} Episodes"/>
        </Transformer>
      </Binding>
      <Binding Source="[Folder.UnwatchedCount]" Target="[UnwatchedCount.Content]" >
        <Conditions>
          <Equality Source="[Application.Config.ShowUnwatchedCount]" Value="true" />
          <Equality Source="[Folder.UnwatchedCount]" ConditionOp="NotEquals" Value="0" />
        </Conditions>
        <Transformer>
          <FormatTransformer Format="({0} New)"/>
        </Transformer>
      </Binding>
      <Default Target="[UnwatchedCount.Content]" Value="" />
      
      <Binding Source="[Expanded]" Target="[MyRepeater.Visible]" />

      <Changed Source="[Input.DeepKeyFocus]" >
        <Conditions>
          <Equality Source="[Input.DeepKeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Parent.SelectedChildIndex]" Value="[Index.Value]" />
        </Actions>
      </Changed>

      <Changed Source="[ExpandContract.Invoked]">
        <Actions>
          <Set Target="[Expanded]" Value="[Expanded]" >
            <Transformer>
              <BooleanTransformer Inverse="true"/>
            </Transformer>
          </Set>
        </Actions>
      </Changed>

      <Changed Source="[LeftFromList.Invoked]">
        <Actions>
          <Invoke Target="[SeasonName.NavigateInto]" />
        </Actions>
      </Changed>

    </Rules>
    <Content>
      <Panel Name="MainPanel" Layout="VerticalFlow">
        <Children>
          <Panel Layout="VerticalFlow" Margins="10,20,0,0" >
            <Children>
              <Panel Name="SeasonInfoPanel" Layout="HorizontalFlow" >
                <Layout>
                  <FlowLayout ItemAlignment="Center"/>
                </Layout>
                <Children>
                  <tb:TextButton Name="SeasonName" Text="[Folder.Name]" Command="[ExpandContract]" Application="[Application]" ThemeHelper="[ThemeHelper]"
                                 Font="Segoe UI Light, 24, bold" Color="color://uc:Dark" Item="[Folder]" />
                  <!--<Text Name="SeasonName" Content="[Folder.Name]" Font="Segoe UI Light, 24, bold" Color="color://uc:Dark" Margins="0,0,20,0" />-->
                  <Text Name="EpisodeCount" Font="Segoe UI Light, 14, bold" Color="color://uc:Dark" Margins="20,0,0,0"  />
                  <Text Name="UnwatchedCount" Font="Segoe UI Light, 14, bold" Color="color://uc:Dark" Margins="10,0,0,0"  />
                </Children>
              </Panel>
              <Graphic Name="SeasonPoster" Content="[Folder.PreferredImage]" MaintainAspectRatio="true" MaximumSize="0,200" Margins="10,10,0,0" >
              </Graphic>
              <Repeater  Source="[Folder.Children]" Name="MyRepeater" DiscardOffscreenVisuals="false" Margins="10,10,0,0">
                <Layout>
                  <FlowLayout Orientation="Vertical" Spacing="1,1"/>
                </Layout>
                <Animations>
                  <Animation Type="Move">
                    <Keyframes>
                      <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                      <PositionKeyframe Time="0.55" RelativeTo="Final"  />
                    </Keyframes>
                  </Animation>
                  <Animation Type="Show">
                    <Keyframes>
                      <ScaleKeyframe Time="0" RelativeTo="Absolute" Value="0,0,0" Interpolation="EaseIn, 1.0, 0.25"/>
                      <ScaleKeyframe Time="0.25" RelativeTo="Final" Value="1,1,1" />
                    </Keyframes>
                  </Animation>
                  <Animation Type="Hide">
                    <Keyframes>
                      <ScaleKeyframe Time="0.25" RelativeTo="Absolute" Value="0,0,0" Interpolation="EaseIn, 1.0, 0.25"/>
                      <ScaleKeyframe Time="0" RelativeTo="Final" Value="1,1,1" />
                    </Keyframes>
                  </Animation>
                </Animations>
                <Content >
                  <lb:ListButton Application="[Application]" Folder="[Folder]" Index="[RepeatedItemIndex]" 
                                 TrapLeft="true" ExitLeft="[LeftFromList]"
                                 Item="[RepeatedItem!lib:Item]"  Font="font://uf:LightMediumMinus" ThemeHelper="[ThemeHelper]"/>
                </Content>
              </Repeater>
              
            </Children>
          </Panel>
        </Children>
      </Panel>
    </Content>


  </UI>

</Mcml>
